name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      # - name: Cache pip dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-

      - name: install dependencies
        run: |
          pip install -r requirements.txt

      - name: run pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          dvc repro

      # - name: Run model tests
      #   env:
      #     DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
      #   run: |
      #     python -m unittest tests/test_model.py

      # - name: Promote model to production
      #   if: success()
      #   env:
      #     DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
      #   run: python scripts/promote_model.py

      # - name: Run Flask app tests
      #   if: success()
      #   env:
      #     DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
      #   run: python -m unittest tests/test_flask_app.py

      # - name: Login to AWS ECR
      #   if: success()
      #   run: |
      #     aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 051826734860.dkr.ecr.ap-southeast-2.amazonaws.com

      # - name: Build Docker image
      #   if: success()
      #   run: |
      #     docker build -t campusx_ecr .

      # - name: Tag Docker image
      #   if: success()
      #   run: |
      #     docker tag campusx_ecr:latest 051826734860.dkr.ecr.ap-southeast-2.amazonaws.com/campusx_ecr:latest

      # - name: Push Docker image to AWS ECR
      #   if: success()
      #   run: |
      #     docker push 051826734860.dkr.ecr.ap-southeast-2.amazonaws.com/campusx_ecr:latest

      # # Zip the required files
      # - name: Zip files for deployment
      #   if: success()
      #   run: |
      #     zip -r deployment.zip appspec.yml deploy/scripts/install_dependencies.sh deploy/scripts/start_docker.sh

      # # Upload the ZIP file to S3
      # - name: Upload ZIP to S3
      #   if: success()
      #   run: |
      #     aws s3 cp deployment.zip s3://campusxcodedeploybucket/deployment.zip

      # # Deploy to AWS CodeDeploy using the uploaded ZIP file
      # - name: Deploy to AWS CodeDeploy
      #   if: success()
      #   run: |
      #     aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws deploy create-deployment \
      #       --application-name MyDockerApp2 \
      #       --deployment-config-name CodeDeployDefault.OneAtATime \
      #       --deployment-group-name MyDockerAppASGDeploymentGroup \
      #       --s3-location bucket=campusxcodedeploybucket,key=deployment.zip,bundleType=zip \
      #       --file-exists-behavior OVERWRITE \
      #       --region ap-southeast-2


      